openapi: 3.0.3
info:
  title: AuthService API
  version: 1.0.0
  description: API specification for the AuthService of the e-shop application. Handles user authentication and authorization.

servers:
  - url: localhost:8081
    description: local dev
paths:
  /auth/register:
    post:
      summary: Register a new user
      operationId: register
      tags:
        - Authentication
      requestBody:
        description: User registration data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterResponse'
        '400':
          description: Bad Request - Invalid input data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/login:
    post:
      summary: Authenticate a user and obtain an access token
      operationId: login
      tags:
        - Authentication
      requestBody:
        description: User login credentials
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: User authenticated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          description: Bad Request - Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/credentials:
    put:
      summary: Update user credentials
      operationId: updateCredentials
      tags:
        - Credentials
      requestBody:
        description: User login credentials
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCredentialsRequest'
      responses:
        '200':
          description: User authenticated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateCredentialsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/credentials/{id}:
    put:
      summary: ADMIN - Update user credentials
      operationId: adminUpdateCredentials
      tags:
        - Credentials
      parameters:
        - $ref: '#/components/parameters/UserIdPathParam'
      requestBody:
        description: User login credentials
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCredentialsRequest'
      responses:
        '200':
          description: User authenticated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateCredentialsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  parameters:
    UserIdPathParam:
      name: id
      in: path
      description: UUID of the user
      required: true
      schema:
        type: string
        format: uuid
        example: 123e4567-e89b-12d3-a456-426614174000

  schemas:
    RegisterRequest:
      type: object
      properties:
        userData:
          $ref: '#/components/schemas/UserForm'
        credentials:
          $ref: '#/components/schemas/CredentialsForm'

    UserForm:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        phoneNumber:
          type : string
        address:
          $ref: '#/components/schemas/AddressForm'

    AddressForm:
      type: object
      properties:
        street:
          type: string
          example: '123 Main St'
        city:
          type: string
          example: 'Anytown'
        state:
          type: string
          example: 'State'
        postalCode:
          type: string
          example: '12345'
        country:
          type: string
          example: 'Country'

    CredentialsForm:
      type: object
      properties:
        email:
          type: string
        password:
          type: string

    RegisterResponse:
      type: object
      properties:
        message:
          type: string
          example: User registered successfully.
        token:
          type: string
          example: "bearer ey...."

    LoginRequest:
      type: object
      properties:
        credentials:
          $ref: '#/components/schemas/CredentialsForm'

    UpdateCredentialsRequest:
      type: object
      properties:
        credentials:
          $ref: '#/components/schemas/CredentialsForm'

    LoginResponse:
      type: object
      properties:
        token:
          type: string
          description: JWT access token
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        message:
          type: string
          description: Access token expiry time in seconds
          example: "Login successful"

    UpdateCredentialsResponse:
      type: object
      properties:
        token:
          type: string
          description: JWT access token
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        message:
          type: string
          description: Access token expiry time in seconds
          example: "Credentials updated successfuly"



    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          example: Invalid credentials.
        details:
          type: string
          example: The password provided does not meet the security requirements.

security:
  - bearerAuth: []

tags:
  - name: Authentication
    description: Register and login user.
