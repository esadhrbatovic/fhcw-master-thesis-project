openapi: 3.0.3
info:
  title: AuthService API
  version: 1.0.0
  description: API specification for the AuthService of the e-shop application. Handles user authentication and authorization.

servers:
  - url: https://api.yourshop.com
    description: Production server
  - url: https://api.staging.yourshop.com
    description: Staging server

paths:
  /auth/register:
    post:
      summary: Register a new user
      operationId: registerUser
      tags:
        - Authentication
      requestBody:
        description: User registration data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterResponse'
        '400':
          description: Bad Request - Invalid input data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/login:
    post:
      summary: Authenticate a user and obtain an access token
      operationId: loginUser
      tags:
        - Authentication
      requestBody:
        description: User login credentials
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: User authenticated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          description: Bad Request - Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'


components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    RegisterRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          example: user@example.com
        password:
          type: string
          format: password
          minLength: 8
          example: StrongP@ssw0rd
      additionalProperties: false

    RegisterResponse:
      type: object
      properties:
        message:
          type: string
          example: User registered successfully.
      additionalProperties: false

    LoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          example: user@example.com
        password:
          type: string
          format: password
          example: StrongP@ssw0rd
      additionalProperties: false

    LoginResponse:
      type: object
      properties:
        access_token:
          type: string
          description: JWT access token
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        token_type:
          type: string
          example: Bearer
        expires_in:
          type: integer
          description: Access token expiry time in seconds
          example: 3600
      additionalProperties: false


    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          example: Invalid credentials.
        details:
          type: string
          example: The password provided does not meet the security requirements.
      additionalProperties: false

security:
  - bearerAuth: []

tags:
  - name: Authentication
    description: Endpoints related to user authentication and authorization.
