openapi: 3.0.3
info:
  title: LicenseService API
  version: 1.0.0
  description: |
    API specification for the LicenseService of the e-shop application.
    Generates and manages digital licenses for purchased products.
    Provides admin endpoints to manage license templates and view generated licenses.

servers:
  - url: https://licenseservice.yourshop.com
    description: Production server
  - url: https://licenseservice.staging.yourshop.com
    description: Staging server

paths:
  /license-templates:
    get:
      summary: List all license templates
      operationId: listLicenseTemplates
      tags:
        - License Templates
      security:
        - bearerAuth: []
        - adminAuth: []
      responses:
        '200':
          description: License templates retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LicenseTemplateListResponse'
        '401':
          description: Unauthorized - Invalid or missing token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden - Not allowed to access this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /license-templates/{product_id}:
    get:
      summary: Get license template by product ID
      operationId: getLicenseTemplateByProductId
      tags:
        - License Templates
      security:
        - bearerAuth: []
        - adminAuth: []
      parameters:
        - $ref: '#/components/parameters/ProductIdPathParam'
      responses:
        '200':
          description: License template retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LicenseTemplateResponse'
        '401':
          description: Unauthorized - Invalid or missing token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden - Not allowed to access this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found - License template does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    put:
      summary: Create or update license template for a product
      operationId: upsertLicenseTemplate
      tags:
        - License Templates
      security:
        - bearerAuth: []
        - adminAuth: []
      parameters:
        - $ref: '#/components/parameters/ProductIdPathParam'
      requestBody:
        description: License template data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertLicenseTemplateRequest'
      responses:
        '200':
          description: License template updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LicenseTemplateResponse'
        '201':
          description: License template created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LicenseTemplateResponse'
        '400':
          description: Bad Request - Invalid input data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - Invalid or missing token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden - Not allowed to access this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /licenses:
    get:
      summary: List all generated licenses
      operationId: listLicenses
      tags:
        - Licenses
      security:
        - bearerAuth: []
        - adminAuth: []
      parameters:
        - $ref: '#/components/parameters/PageQueryParam'
        - $ref: '#/components/parameters/LimitQueryParam'
        - $ref: '#/components/parameters/UserIdQueryParam'
        - $ref: '#/components/parameters/ProductIdQueryParam'
        - $ref: '#/components/parameters/SortQueryParam'
      responses:
        '200':
          description: Licenses retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LicenseListResponse'
        '401':
          description: Unauthorized - Invalid or missing token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden - Not allowed to access this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /licenses/{serial_number}:
    get:
      summary: Get license by serial number
      operationId: getLicenseBySerialNumber
      tags:
        - Licenses
      security:
        - bearerAuth: []
        - adminAuth: []
      parameters:
        - $ref: '#/components/parameters/SerialNumberPathParam'
      responses:
        '200':
          description: License retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LicenseResponse'
        '401':
          description: Unauthorized - Invalid or missing token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden - Not allowed to access this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found - License does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    adminAuth:
      type: apiKey
      in: header
      name: X-Admin-Token
      description: Token for admin access

  parameters:
    ProductIdPathParam:
      name: product_id
      in: path
      description: UUID of the product
      required: true
      schema:
        type: string
        format: uuid
        example: 321e4567-e89b-12d3-a456-426614174000

    SerialNumberPathParam:
      name: serial_number
      in: path
      description: Serial number of the license
      required: true
      schema:
        type: string
        example: 'ABCDEF-123456-GHIJKL-789012'

    PageQueryParam:
      name: page
      in: query
      description: Page number for pagination (default is 1)
      required: false
      schema:
        type: integer
        minimum: 1
        default: 1

    LimitQueryParam:
      name: limit
      in: query
      description: Number of items per page (default is 10)
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 10

    UserIdQueryParam:
      name: user_id
      in: query
      description: Filter licenses by user ID
      required: false
      schema:
        type: string
        format: uuid
        example: 456e7890-e89b-12d3-a456-426614174002

    ProductIdQueryParam:
      name: product_id
      in: query
      description: Filter licenses by product ID
      required: false
      schema:
        type: string
        format: uuid
        example: 321e4567-e89b-12d3-a456-426614174000

    SortQueryParam:
      name: sort
      in: query
      description: Sort order (e.g., 'date_asc', 'date_desc')
      required: false
      schema:
        type: string
        enum:
          - date_asc
          - date_desc
        example: 'date_desc'

  schemas:
    LicenseTemplate:
      type: object
      properties:
        product_id:
          type: string
          format: uuid
          example: 321e4567-e89b-12d3-a456-426614174000
        license_duration:
          type: integer
          description: Duration of the license in days (0 for perpetual)
          example: 365
        created_at:
          type: string
          format: date-time
          example: '2023-10-15T10:00:00Z'
        updated_at:
          type: string
          format: date-time
          example: '2023-10-16T12:00:00Z'
      required:
        - product_id
        - license_duration
        - created_at
        - updated_at
      additionalProperties: false

    LicenseTemplateResponse:
      allOf:
        - $ref: '#/components/schemas/LicenseTemplate'

    LicenseTemplateListResponse:
      type: object
      properties:
        license_templates:
          type: array
          items:
            $ref: '#/components/schemas/LicenseTemplate'
      additionalProperties: false

    UpsertLicenseTemplateRequest:
      type: object
      required:
        - license_duration
      properties:
        license_duration:
          type: integer
          description: Duration of the license in days (0 for perpetual)
          example: 365
      additionalProperties: false

    License:
      type: object
      properties:
        serial_number:
          type: string
          example: 'ABCDEF-123456-GHIJKL-789012'
        user_id:
          type: string
          format: uuid
          example: 456e7890-e89b-12d3-a456-426614174002
        product_id:
          type: string
          format: uuid
          example: 321e4567-e89b-12d3-a456-426614174000
        license_duration:
          type: integer
          description: Duration of the license in days (0 for perpetual)
          example: 365
        issued_at:
          type: string
          format: date-time
          example: '2023-10-17T09:00:00Z'
        expires_at:
          type: string
          format: date-time
          example: '2024-10-17T09:00:00Z'
        status:
          type: string
          enum:
            - active
            - expired
            - revoked
          example: 'active'
      required:
        - serial_number
        - user_id
        - product_id
        - license_duration
        - issued_at
        - status
      additionalProperties: false

    LicenseResponse:
      allOf:
        - $ref: '#/components/schemas/License'

    LicenseListResponse:
      type: object
      properties:
        licenses:
          type: array
          items:
            $ref: '#/components/schemas/License'
        pagination:
          type: object
          properties:
            current_page:
              type: integer
              example: 1
            total_pages:
              type: integer
              example: 5
            total_items:
              type: integer
              example: 50
            limit:
              type: integer
              example: 10
          additionalProperties: false
      additionalProperties: false

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          example: 'Invalid input data.'
        details:
          type: string
          example: 'License duration must be a non-negative integer.'
      additionalProperties: false

security:
  - bearerAuth: []

tags:
  - name: License Templates
    description: Endpoints related to managing license templates.
  - name: Licenses
    description: Endpoints related to viewing generated licenses.
