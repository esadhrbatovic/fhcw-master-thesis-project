quarkus.devservices.enabled=false

# for running as native image in docker container
#quarkus.mongodb.connection-string=mongodb://host.docker.internal:27017/
# for local dev
quarkus.mongodb.connection-string=mongodb://localhost:27017

quarkus.mongodb.database=eh-ma-quarkus-userservice-db
#quarkus.mongodb.credentials.username=admin
#quarkus.mongodb.credentials.password=admin
#quarkus.mongodb.credentials.auth-source=admin

quarkus.mongodb.uuid-representation=STANDARD

quarkus.datasource.devservices.enabled=false

kafka.bootstrap.servers=localhost:29092
#kafka.bootstrap.servers=host.docker.internal:29092

mp.messaging.incoming.user-registered-in.connector=smallrye-kafka
mp.messaging.incoming.user-registered-in.value.deserializer=com.hrbatovic.quarkus.master.user.messaging.deserializers.UserEntityDeserializer
mp.messaging.incoming.user-registered-in.group.id=user-registered-eh-ma-quarkus-group
mp.messaging.incoming.user-registered-in.topic=user-registered

mp.messaging.outgoing.user-updated-out.connector=smallrye-kafka
mp.messaging.outgoing.user-updated-out.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer
mp.messaging.outgoing.user-updated-out.topic=user-updated

mp.messaging.outgoing.user-deleted-out.connector=smallrye-kafka
mp.messaging.outgoing.user-deleted-out.value.serializer=org.apache.kafka.common.serialization.UUIDSerializer
mp.messaging.outgoing.user-deleted-out.topic=user-deleted

jwt.issuer=eh-ma-quarkus
smallrye.jwt.sign.key.location=priv.pem
mp.jwt.verify.publickey.location=pub.pem

#Others
quarkus.http.non-application-root-path=q
quarkus.swagger-ui.always-include=true
quarkus.http.root-path=/
quarkus.http.port=8082

# This allows all origin hosts, should be specified if possible
quarkus.http.cors=true
quarkus.http.cors.origins=*
quarkus.http.cors.headers=accept, authorization, content-type, x-requested-with
quarkus.http.cors.methods=GET, POST, PUT, PATCH, DELETE, OPTIONS
